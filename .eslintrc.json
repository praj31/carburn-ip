{
  "parser": "@typescript-eslint/parser",
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "extends": [
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended",
    "prettier",
    "next"
  ],
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 2018,
    "sourceType": "module", 
    "project": "./tsconfig.json"
  },
  "plugins": ["react", "react-hooks", "@typescript-eslint"],
  "rules": {
    "prettier/prettier": 0,
    "@typescript-eslint/await-thenable": 1,
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/camelcase": "off",
    "@typescript/class-name-casing": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "interface",
        "format": ["PascalCase"],
        "custom": {
          "regex": "^I[A-Z]",
          "match": true
        }
      }
    ],
    "@typescript-eslint/no-empty-interface": [1, { "allowSingleExtends": true }],
    "@typescript-eslint/member-ordering": "error",
    "@typescript-eslint/no-unsafe-return": "error",
    "@typescript-eslint/no-inferrable-types": "off",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-unnecessary-condition": 1,
    "no-unused-expressions": "off",
    "@typescript-eslint/no-unused-expressions": "error",
    "@typescript-eslint/no-unused-vars": "warn",
    "react/boolean-prop-naming": [
      "error",
      {
        "message": "It is better if your prop ({{ propName }}) matches this pattern: ({{ pattern }})",
        "rule": "^(b)[A-Z]([A-Za-z]?)+"
      }
    ],
    "react/destructuring-assignment": 1,
    "react/display-name": 0,
    "react/function-component-definition": [
      0,
      {
        "namedComponents": "arrow-function",
        "unnamedComponents": "arrow-function"
      }
    ],
    "react-hooks/rules-of-hooks": "warn",
    "react/jsx-boolean-value": 2,
    "react/jsx-curly-brace-presence": 2,
    "react/jsx-fragments": 2,
    "react/jsx-handler-names": [
      2,
      {
        "eventHandlerPrefix": "/^_on.+$/",
        "eventHandlerPropPrefix": "/^_on.+$/",
        "checkLocalVariables": true
      }
    ],
    "react/jsx-no-bind": 0,
    "react/jsx-no-useless-fragment": 1,
    "react/jsx-sort-props": [
      2,
      {
        "reservedFirst": true, 
        "shorthandFirst": true, 
        "ignoreCase": false, 
        "noSortAlphabetically": false,
        "callbacksLast": true
      }
    ],
    "react/jsx-uses-vars": 2,
    "react/no-access-state-in-setstate": 2,
    "react/no-children-prop": 2,
    "react/no-danger-with-children": 2,
    "react/no-deprecated": 2,
    "react/no-direct-mutation-state": 2,
    "react/no-redundant-should-component-update": 2,
    "react/no-string-refs": 2,
    "react/no-typos": 2,
    "react/no-unescaped-entities": 1,
    "react/no-unused-state": 1,
    "react/prefer-stateless-function": 2,
    "react/self-closing-comp": 2,
    "default-case": "error",
    "no-alert": "warn",
    "no-await-in-loop": "error",
    "no-compare-neg-zero": "error",
    "no-cond-assign": "error",
    "no-console": ["warn", { "allow": ["warn", "error"] }], 
    "no-duplicate-imports": "error",
    "no-duplicate-case": "error",
    "no-else-return": ["error", { "allowElseIf": true }],
    "no-empty": "error",
    "no-extra-boolean-cast": "error",
    "no-extra-semi": "off",
    "no-param-reassign": "error", 
    "no-return-assign": "error",
    "no-unreachable": "error",
    "no-useless-return": "error",
    "use-isnan": "error"
  }
}
